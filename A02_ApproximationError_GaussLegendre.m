% This script is to compute the difference between the shell field obtained 
% by analytical solution and thetesseroid field using the Gauss-Legendre 
% quadrature integration.
% The tesseroid model is generated by the function 
% tess_genera_model(tessWid,tessThick,tessDen), which has three parameters: 
% tessWid is the horizontal dimension (бу)of tesseroids, tessThick is the
% thickness(m) of thesseroids,and tessDen is the density(kg/m^3) of the
% tesseroid.
% The computation grid is generated by the function
% grid_gene(WestGr,EastGr,SouthGr,NorthGr,Spacinglon,Spacinglat,Hp), which
% has parameters (WestGr,EastGr,SouthGr,NorthGr) to indicate the area of
% the grid, (Spacinglon,Spacinglat) to indicate the spacing of the
% computation points along the longitude and latitude direction, and Hp to
% indicate the height.
% the global variable MEAN_EARTH_RADIUS the mean radius of the earth;
% the global variable G the gravitational constant in the program.

clear;clc;
global MEAN_EARTH_RADIUS;global G;global SI2mEOTVOS;global SI2MGAL;
SI2mEOTVOS=1000000000000.0;SI2MGAL=100000.0;MEAN_EARTH_RADIUS = 6378137.0;G = 0.0000000000667191;
%for parfor loop, using the local variables
MEAN_EARTH_RADIUS_local=MEAN_EARTH_RADIUS;G_local=G;SI2mEOTVOS_local=SI2mEOTVOS;SI2MGAL_local=SI2MGAL;
%Reading the roots and weights
Read_GL_rootandweights;

% Setting of the parameters
Norder=2%Gauss-legendre order
Hp=200000%Observation height(m)
tessWid=1;% the horizontal dimensions of the tesseroid unit is degrees, such as 1degree
TopH=2000;BottomH=0;% the top and bottome surface
tessDen=2670;% the tesseroid density unit is kg/(m)^3
% the tess model variable name setting
tessmdNa=['tess_1degx1deg','_dr',num2str((TopH-BottomH)/1000),'km'];
WestGr=0;EastGr=tessWid/2;Spacinglon=tessWid/6;%computation grid range for longitude and grid nodes sapcing
SouthGr=0;NorthGr=90;Spacinglat=0.25;%computation grid range for latitude and spacing along laittude direction
%Discretizing the shell into tesseroid model
tessmodel=tess_genera_model(tessWid,TopH,BottomH,tessDen);
[modnr,modnc]=size(tessmodel);
tessnumber=modnr
%Generating the computation grid using the function grdi_gene();
griddata=grid_gene(WestGr,EastGr,SouthGr,NorthGr,Spacinglon,Spacinglat,Hp);
[gnr,gnc]=size(griddata);
gridnumber=gnr

%Closed formula for the gravitational attraction component
Density_shell=tessmodel(1,7);% Shell density is equal to tesseroid density
R1_shell=MEAN_EARTH_RADIUS+tessmodel(1,6); % inward radius R1 of the shell
R2_shell=MEAN_EARTH_RADIUS+tessmodel(1,5); % outer radius R2 of the shell
M1=Density_shell*4/3*pi*(R1_shell^3);
M2=Density_shell*4/3*pi*(R2_shell^3);
Analy_grav=G*(M2-M1)/((griddata(1,3)+MEAN_EARTH_RADIUS)^2)*SI2MGAL;
%Initializing the variables 
GLQ_grav=zeros(gridnumber,1);
tic
startmatlabpool(4)
%Computing the gravitational contribution at computation grid nodes
    parfor grind=1:1:gridnumber
        GLQ_grav(grind)=Pf_GLQ_grav(griddata,grind,tessmodel,Norder,MEAN_EARTH_RADIUS_local,G_local,...
                         GL_roots,GL_weights,SI2MGAL_local);
    end 
AbsoError=GLQ_grav - Analy_grav;
Differ_grav=[griddata(:,1:2) AbsoError];
toc
closematlabpool
%Result variable name generation      
% eval([[tessmdNa,'_ObservH',num2str(Hp/1000),'km_Order',num2str(Norder)] '=Differ_grav;']);
% save('A02_Difference_grav_GaussLegendre',[tessmdNa,'_ObservH',num2str(Hp/1000),'km_Order',num2str(Norder)],'-append');  %,'-append'

